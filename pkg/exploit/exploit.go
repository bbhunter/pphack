/*
pphack - The Most Advanced Client-Side Prototype Pollution Scanner

This repository is under MIT License https://github.com/edoardottt/pphack/blob/main/LICENSE
*/

package exploit

import (
	_ "embed"
	"encoding/json"
	"errors"
	"log"
)

var (
	//go:embed exploits.json
	exploitsJSON string

	exploits           map[string]Product
	ErrProductNotFound = errors.New("product not found")
)

type Product struct {
	Reference string `json:"reference"`
	Exploits  []struct {
		Payload    string `json:"payload"`
		Verifiable string `json:"verifiable"`
	} `json:"exploits"`
}

func init() {
	if err := json.Unmarshal([]byte(exploitsJSON), &exploits); err != nil {
		log.Fatal("error while unmarshaling exploits.json")
	}
}

// GetProductInfo returns the information of a product
// if found in the database, an error otherwise.
func GetProductInfo(name string) (Product, error) {
	if k, ok := exploits[name]; ok {
		return k, nil
	}

	return Product{}, ErrProductNotFound
}
